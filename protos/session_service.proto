syntax = "proto3";

package github.com.pyrus.platform.protos;

option go_package = "platform";
option csharp_namespace = "Pyrus.Platform.Protos";

import "common.proto";
import "google/protobuf/timestamp.proto";

/*
    The SessionService manages a telerobotic session. In its current implementation
    it manages a single controller connecting to a single robot. In the future, a
    session may additionally include medical devices, user interfaces, and other
    items neccessary to achieve telerobotics. 
*/
service SessionService {
    // Creates a session, causing each Statusing device to recieve the other
    // device's address
    rpc Create(CreateSessionRequest) returns (CreateSessionResponse);

    // Get information about a single session
    rpc Get(GetSessionRequest) returns (GetSessionResponse);

    // List sessions
    rpc List(ListSessionsRequest) returns (stream ListSessionsResponse);

    // Deletes a session
    rpc Delete(DeleteSessionRequest) returns (DeleteSessionResponse);

    // Connects a client waiting for a session
    rpc WaitFor(WaitForSessionRequest) returns (stream WaitForSessionResponse);

    // ListWaiting lists waiting clients
    // TODO: Rethink design. This seems odd
    rpc ListWaiting(ListWaitingSessionRequest) returns (stream ListWaitingSessionResponse);

    // Streams messages between the client and server indicating the session's status
    rpc Join(JoinSessionRequest) returns (stream JoinSessionResponse);
}

message CreateSessionRequest {
    string name = 1;
    repeated uint64 deviceIDs = 2;
}

message CreateSessionResponse {
    Session session = 1;
}

message GetSessionRequest {
    uint64 sessionID = 1;
}

message GetSessionResponse {
    Session session = 1;
}

message DeleteSessionRequest {
    uint64 sessionID = 1;
}

message ListSessionsRequest {
}

message ListSessionsResponse {
    Session session = 1;
}

message DeleteSessionResponse {
}

message WaitForSessionRequest {
    uint64 deviceID = 1;
}

message WaitForSessionResponse {
    uint64 sessionID = 1;
}

message ListWaitingSessionRequest {
}

message ListWaitingSessionResponse {
    Device device = 1;
}

message JoinSessionRequest {
    uint64 deviceID = 1;
    uint64 sessionID = 2;
}

message JoinSessionResponse {
    SessionDevice sessionDevice = 1;
}

message Session {
    uint64 id = 1;
    string name = 2;
    repeated SessionDevice devices = 3;
    google.protobuf.Timestamp created = 4;
    google.protobuf.Timestamp closed = 5;
}

message SessionDevice {
    bool connected = 1;
    Device device = 2;
    repeated DataType produces = 3;
    repeated DataType consumes = 4;
}